name: MicroPython

on:
  push:
  pull_request:
  release:
    types: [created]

jobs:
  build:
    name: MicroPython ${{ matrix.name }}
    runs-on: ubuntu-24.04
    continue-on-error: true
    strategy:
      matrix:
        include:
        - name: pimoroni_pico_lipo2

    env:
      # MicroPython version will be contained in github.event.release.tag_name for releases
      CI_RELEASE_FILENAME: ${{ matrix.name }}-${{ github.event.release.tag_name || github.sha }}-micropython
      CI_PROJECT_ROOT: ${{ github.workspace }}/src-${{ github.sha }}
      CI_BUILD_ROOT: ${{ github.workspace }}
      CI_USE_ENV: 1

    steps:
    - name: Compiler Cache Fixup
      run: |
        mkdir -p /home/runner/.ccache
  
    - name: "CCache: Restore saved cache"
      uses: actions/cache@v4
      with:
        path: /home/runner/.ccache
        key: ccache-micropython-${{ matrix.name }}-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          ccache-micropython-${{ matrix.name }}-${{ github.ref }}
          ccache-micropython-${{ matrix.name }}-

    - name: "Checkout Project"
      uses: actions/checkout@v4
      with:
        submodules: true
        path: ${{ env.CI_PROJECT_ROOT }}

    - name: "Install Arm GNU Toolchain (arm-none-eabi-gcc)"
      uses: carlosperate/arm-none-eabi-gcc-action@v1
      with:
        release: '14.2.Rel1'

    - name: "Prepare tools & dependencies"
      shell: bash
      run: |
        source $CI_PROJECT_ROOT/ci/micropython.sh
        mkdir -p $CI_BUILD_ROOT
        ci_apt_install_build_deps
        ci_prepare_all

    - name: "Add Russ Hughes ST7789 frozen module"
      shell: bash
      run: |
        git clone https://github.com/russhughes/st7789_mpy.git "$CI_PROJECT_ROOT/micropython/ports/rp2/st7789_build"
        # quick sanity output for the CI log
        echo "Cloned to: $(realpath "$CI_PROJECT_ROOT/micropython/ports/rp2/st7789_build")"
        ls -la "$CI_PROJECT_ROOT/micropython/ports/rp2/st7789_build" || true
        
    - name: "Debug: show chip & st7789 paths"
      shell: bash
      run: |
        echo "CI_PROJECT_ROOT: $CI_PROJECT_ROOT"
        echo "CI_BUILD_ROOT:   $CI_BUILD_ROOT"
        echo "pwd: $(pwd)"
        echo "--- ls $CI_PROJECT_ROOT ---"
        ls -la $CI_PROJECT_ROOT || true
        echo "--- ls micropython/ports/rp2 (repo CMake root) ---"
        ls -la $CI_PROJECT_ROOT/micropython/ports/rp2 || true
        echo "--- ls st7789_build (where we cloned) ---"
        ls -la $CI_PROJECT_ROOT/micropython/ports/rp2/st7789_build || true
        echo "--- tree st7789_build (small) ---"
        (cd $CI_PROJECT_ROOT/micropython/ports/rp2/st7789_build && ls -la) || true
        echo "--- show top-level micropython.cmake from st7789 ---"
        if [ -f "$CI_PROJECT_ROOT/micropython/ports/rp2/st7789_build/micropython.cmake" ]; then
          sed -n '1,200p' $CI_PROJECT_ROOT/micropython/ports/rp2/st7789_build/micropython.cmake
        else
          echo "NO root micropython.cmake at expected location"
        fi
        echo "--- show nested st7789/micropython.cmake ---"
        if [ -f "$CI_PROJECT_ROOT/micropython/ports/rp2/st7789_build/st7789/micropython.cmake" ]; then
          sed -n '1,200p' $CI_PROJECT_ROOT/micropython/ports/rp2/st7789_build/st7789/micropython.cmake
        else
          echo "NO nested st7789/micropython.cmake at expected location"
        fi
  
    - name: "MicroPython: Configure"
      shell: bash
      run: |
        source $CI_PROJECT_ROOT/ci/micropython.sh
        micropython_version
        ci_cmake_configure ${{ matrix.name }}

    - name: "MicroPython: Build"
      shell: bash
      run: |
        source $CI_PROJECT_ROOT/ci/micropython.sh
        ci_cmake_build ${{ matrix.name }}

    - name: "Artifacts: Upload .uf2"
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.CI_RELEASE_FILENAME }}.uf2
        path: ${{ env.CI_BUILD_ROOT }}/${{ env.CI_RELEASE_FILENAME }}.uf2
        
    - name: "Artifacts: Upload .uf2 (With Filesystem)"
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.CI_RELEASE_FILENAME }}-with-filesystem.uf2
        path: ${{ env.CI_BUILD_ROOT }}/${{ env.CI_RELEASE_FILENAME }}-with-filesystem.uf2

    - name: "Release: Upload .uf2"
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ env.CI_BUILD_ROOT }}/${{ env.CI_RELEASE_FILENAME }}.uf2

    - name: "Release: Upload .uf2 (With Filesystem)"
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ env.CI_BUILD_ROOT }}/${{ env.CI_RELEASE_FILENAME }}-with-filesystem.uf2
